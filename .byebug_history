exit
@answers.each do |x| x.question.each do |y| y.question end end
@answers.each do |x| x.question end
@answers
exit
@answer
@answer.question
@answer
exit
@answers.question_id
@answers.question
@answers
exit
@answers.question
@answers
@answer.each do |x| x.answer end
@answer.each do |x| x.answer
@answer
Answer.all
@answer
c
@answer.question
@answer
n
@answer
exit
question.id
exit
Question.find(params[:question_id])
@question
@question.id
question.id
c
params
n
exit
question.id
question
exit
@question.id
question.id
c
n
@question
exit
params
n
@user.id
exit
@params
n
@user.id
exit
@user.id
exit
@params
n
@question
exit
@question
exit
n
@question
exit
@question
c
@user.authenticate(params[:user][:password])
@user
exit
@user
@user.authenticate(params[:user][:password])
@user.authenticate(params[:password])
User.find_by(email: params[:user][:email])
User.find_by(email: params[:email])
@user
c
exit
BCrypt::Password.create(params[:password])
@user.encrypted_password
c
exit
BCrypt::Password.create(params[:password])
@user.encrypted_password
exit
Password.create(params[:password])
@user
exit
@user
@user.password
c
@user.password
exit
@user.password
@user
exit
abc == "0987654321"
abc =  BCrypt::Password.new(@user.encrypted_password)
exit
abc == "1234567"
abc.class
abc = BCrypt::Password.new(@user.encrypted_password)
params[:password]
BCrypt::Password.new(@user.encrypted_password)
n
@user
exit
params[:password]
@user.encrypted_password
n
exit
@user
@user.password
n
@user
c
password
@password
next
exit
password
@encrypted_password
n
password
exit
@password
n
@password
password
exit
@user
user.encrypted_password
encrypted_password
n
password
@password
n
@password
password
exit
@password
exit
params[:password]
@user
password
@user.password
n
@user
exit
@password
password
exit
n
@password
exit
@user
exit
@user
exit
Password.new(user.encrypted_password)
Password.new(user.encrypted_password).is_password? password
n
c
Password.new(user.encrypted_password).is_password? password
Password.new(user.encrypted_password).is_password?
user.encrypted_password.is_password?
user.encrypted_password
password
n
user
c
Users.find_by email: "params[:email]"
params[:email]
params
User.all
Users.find_by email: params[:email]
Users.find_by email:params[:email]
User[:email]
User.all
email
User.email
n
c
params
params[:email]
c
n
params
exit
c
Password.create(@password)
self
c
@password
c
self
@password
password
c
User.all
c
params
user
n
user
exit
params
user
n
user
exit
@params
n
user
exit
user
exit
params
user
@user
@params
n
user
exit
user
exit
user
exit
user
exit
user
exit
n
user[:email]
user[:fullname]
user[fullname]
user[1]
user[3]
user[2]
user
encrypted_password
email
user
exit
user
n
user
exit
user
exit
user
